{
  //设置需要编译的 TS 文件，** 表示目录通配符，* 表示文件通配符
  "include": [
    "src/**/*"
  ],
  // 设置排除编译的 TS 文件，格式与 include 一致
  "exclude": [],
  // 设置编译器行为
  "compilerOptions": {
    // 设置编译后的 JS 版本，默认 ES3 版本
    "target": "ES3",
    // 设置编译后的 JS 模块化规范
    "module": "ES2015",
    // 要使用的 JS 库，例如 DOM，该选项一般不开
    // "lib": [],
    // 设置编译后 JS 文件所在的目录
    "outDir": "dist/",
    // 将所有 TS 文件合并编译成一个 JS 文件，设置该属性必须将 module 属性设置成 system 或 amd。
    // 实际开发中，一般使用打包工具进行编译打包，因此该选项实际意义不大
    // "outFile": "dist/app.js"，
    // 是否对自己编写的 JS 进行编译，默认 false（不编译）
    "allowJs": true,
    // 是否检查自己编写的 JS 代码是否符合规范，默认为 false（不检查）
    "checkJs": false,
    // 是否将 TS 的注释编译到 JS 文件中，默认 false（保留注释）
    "removeComments": false,
    // 是否生成编译后的 JS 文件，默认 false（生成 JS 文件）
    "noEmit": false,
    // 所有严格检查的总开关，一般会设置为 true
    "strict": true
    // 当 TS 文件存在错误时，是否生成编译后的 JS 文件，默认 false（生成）
    // "noEmitOnError": true,
    // 编译后的 JS 文件是否使用严格模式，默认 false （不实用严格模式），当 TS 文件涉及模块时，编译后 JS 自动使用严格模式。
    // "alwaysStrict": false,
    // 是否不允许隐式的 any 类型，默认 false（允许）
    // "noImplicitAny": true,
    //  是否不允许隐式的 this, 默认 false（允许）
    // "noImplicitThis": false
  }
}