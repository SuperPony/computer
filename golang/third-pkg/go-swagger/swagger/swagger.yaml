basePath: /
consumes:
- application/json
definitions:
  CreateUser:
    description: 添加用户
    properties:
      id:
        description: 用户 ID
        example: 123
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: 用户姓名
        example: 张三
        maxLength: 10
        minLength: 3
        type: string
        x-go-name: Name
      sex:
        description: 用户性别，1男、2女、3未知
        example: 1
        format: uint64
        maximum: 3
        minimum: 1
        type: integer
        x-go-name: Sex
    required:
    - id
    - name
    - sex
    type: object
    x-go-package: gRPC-example/api/user
  UserItem:
    description: 获取指定用户
    properties:
      id:
        description: |-
          用户 ID
          in: path
        format: int64
        type: integer
        x-go-name: Id
    required:
    - id
    type: object
    x-go-package: gRPC-example/api/user
host: localhost
info:
  description: Documentation of our awesome API.
  title: awesome.
  version: 0.0.1
paths:
  /users:
    post:
      operationId: createUserRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/CreateUser'
      responses:
        "200":
          $ref: '#/responses/createUserResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: 创建用户.
      tags:
      - user
  /users/{id}:
    get:
      deprecated: true
      description: 这个接口目前已经废弃.
      operationId: getUserRequest
      parameters:
      - description: 用户 ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/getUserResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      - basic: []
      summary: 获取指定用户.
      tags:
      - user
produces:
- application/json
responses:
  createUserResponse:
    description: 成功状态响应
    schema:
      $ref: '#/definitions/CreateUser'
  errResponse:
    description: 失败状态响应
    headers:
      code:
        description: Error code.
        format: int64
        type: integer
      message:
        description: Error message.
        type: string
  getUserResponse:
    description: 成功状态返回数据
    schema:
      $ref: '#/definitions/UserItem'
schemes:
- http
- https
securityDefinitions:
  api_key:
    in: header
    name: Authorization
    type: apiKey
  basic:
    type: basic
swagger: "2.0"
